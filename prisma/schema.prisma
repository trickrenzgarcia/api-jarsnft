generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Nonce {
  id        Int      @id @default(autoincrement())
  nonce     String   @unique
  logged_at DateTime @default(now())

  @@map("nonce")
}

model Users {
  id         Int          @id @default(autoincrement())
  uid        String       @unique(map: "uid", length: 255) @db.Text
  email      String?      @db.Text
  name       String?      @db.Text
  address    String       @unique(map: "Users_address_key")
  is_listed  Boolean      @default(false)
  created_at DateTime     @default(now())
  role       String       @default("user")
  profile    UserProfile?

  @@map("users")
}

model ApiKeys {
  id         Int      @id @default(autoincrement())
  address    String   @db.VarChar(255)
  name       String   @db.VarChar(255)
  apiKey     String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Date
  expired_at DateTime @db.Date

  @@map("api_keys")
}

model NftCollections {
  contract                String   @id @db.VarChar(255)
  image                   String?  @db.Text
  name                    String   @db.Text
  symbol                  String?  @db.Text
  description             String?  @db.Text
  app_uri                 String?  @db.Text
  external_link           String?  @db.Text
  fee_recipient           String?  @db.Text
  seller_fee_basis_points Int?
  primary_sale_recipient  String?  @db.Text
  trusted_forwarders      String?  @db.LongText
  owner                   String   @db.Text
  view_count              Int      @default(0)
  created_at              DateTime @default(now()) @db.DateTime(0)
  is_nsfw                 Boolean  @default(false)
  is_verified             Boolean  @default(false)
  safe_listed             Boolean  @default(false)

  @@index([contract, name])
  @@map("nft_collections")
  @@fulltext([contract, name])
}

model UserProfile {
  address     String   @unique
  image_url   String?  @db.Text
  banner_url  String?  @db.Text
  is_verified Boolean  @default(false)
  socials     String?  @db.LongText
  updated_at  DateTime @default(now()) @db.DateTime(0)
  user        Users    @relation(fields: [address], references: [address])

  @@map("user_profile")
}

model UserFavorites {
  id          Int      @id @default(autoincrement())
  uid         String    @db.Text
  contract    String      @db.VarChar(255)
  token_id    String    @db.Text
  added_at    DateTime @default(now()) @db.DateTime(0)

  @@map("user_favorites")
}

model NftViews {
  id          Int      @id @default(autoincrement())
  contract    String   @db.VarChar(255)
  token_id    String   @db.VarChar(255)
  view_count  Int      @default(0)

  @@map("nft_views")
}

model NftEvents {
  id          Int      @id @default(autoincrement())
  event_id    String   @unique @default(uuid())
  event_type  String   @db.VarChar(255)
  transaction_hash String @db.VarChar(255)
  address     String?   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.DateTime(0)

  @@map("nft_events")
}